apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../mobsdk.gradle'

apply plugin: 'com.android.application'
apply plugin: 'com.didiglobal.booster'




def addFieldsAndPlaceholders = { flavor, items ->
    for (def item : items) {
        flavor.buildConfigField "String", item.key, '"' + item.value + '"'
    }
    flavor.addManifestPlaceholders(items)
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.novel.cn"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        resValue 'string', 'app_name', '云纵文学'
        multiDexEnabled true

        addFieldsAndPlaceholders(it, [
                APP_ID_WECHAT: "wx87550c9d5f515694"
        ])
    }

    signingConfigs {
        release {
            keyAlias 'app_key'
            keyPassword '123456'
            storeFile file('yunzong.jks')
            storePassword '123456'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "novel"

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }


    productFlavors {
        dev {
            applicationId "com.novel.cn"
            addFieldsAndPlaceholders(it, [
                    PACKAGE_NAME: applicationId,
            ])
            resValue("string", "app_name", "云纵文学-dev")
        }

        beta {
            applicationId "com.novel.cn"
            addFieldsAndPlaceholders(it, [
                    PACKAGE_NAME: applicationId,
            ])
            resValue("string", "app_name", "云纵文学-beta")
        }
        me {

        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == "debug") {
            if (!['devDebug', 'betaDebug'].contains(variant.name)) {
                variant.setIgnore(true);
            }
        } else if (['devRelease', 'devRelease', 'betaRelease'].contains(variant.name)) {
            variant.setIgnore(true);
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //定义apk名字
            def formatedDate = new Date().format("yyyy_MM_dd_HHmmss")
            def apkFileName = "${variant.flavorName}_${variant.versionName}_${formatedDate}.apk";
            outputFileName = apkFileName
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }

    androidExtensions {
        experimental = true
    }
}

//greendao
greendao {
    //数据库schema版本，也可以理解为数据库版本号
    schemaVersion 3
    //设置DaoMaster 、DaoSession、Dao包名
    daoPackage "com.novel.cn.db"
    //设置DaoMaster 、DaoSession、Dao目录
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //support
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["design"]
    //tools

    implementation rootProject.ext.dependencies["eventbus"]
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]
    implementation rootProject.ext.dependencies["rxbinding"]
    implementation rootProject.ext.dependencies["anko"]
    //arms
    implementation project(':arms')

//    implementation rootProject.ext.dependencies["autosize"]
    implementation project(':arms-imageloader-glide')
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
    implementation rootProject.ext.dependencies["adapter"]
    implementation rootProject.ext.dependencies["tablayout"]
    implementation rootProject.ext.dependencies["roundview"]
    implementation rootProject.ext.dependencies["dialog"]
    implementation rootProject.ext.dependencies["circleimageview"]
    implementation rootProject.ext.dependencies["refreshLayout"]
//    implementation rootProject.ext.dependencies["multiStateView"]
    implementation rootProject.ext.dependencies["banner"]
    implementation 'com.lijiankun24:shadowlayout:1.1.0'
    implementation rootProject.ext.dependencies["switchbutton"]
    implementation rootProject.ext.dependencies["calligraphy"]
    implementation rootProject.ext.dependencies["flexbox"]
    implementation rootProject.ext.dependencies["shadow-layout"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["arclayout"]
    implementation rootProject.ext.dependencies["opencc"]
    implementation(rootProject.ext.dependencies["easypermissions"]) {
        exclude group: 'com.android.support'
    }
    implementation rootProject.ext.dependencies["matisse"]
    implementation rootProject.ext.dependencies["simplecropview"]

    implementation rootProject.ext.dependencies["greendao"]
    // 支付宝
    implementation(name: 'alipaySdk-15.5.9-20181123210601', ext: 'aar')
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    implementation 'com.github.razerdp:BasePopup:2.1.9'
    implementation project(':rxcache')
    implementation project(':rxcache-kotlin')
    implementation project(':emoji-library')

    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    implementation 'com.ms-square:expandableTextView:0.1.4'
    implementation 'com.github.ome450901:SimpleRatingBar:1.4.3'
//    implementation files('libs/reader-2.3.0.jar')

    implementation project(':WheelPicker')
    implementation "com.android.support:support-annotations:28.0.0"
    implementation "com.github.hackware1993:MagicIndicator:1.6.0"
    implementation project(':dsbridge')
    implementation  project(':filepicker')
    debugImplementation 'com.didichuxing.doraemonkit:doraemonkit:1.1.8'
    releaseImplementation 'com.didichuxing.doraemonkit:doraemonkit-no-op:1.1.8'
    implementation 'com.lzy.widget:ninegridview:0.2.0'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.3.0'
}
